{"version":3,"file":"component---src-pages-projects-mdx-frontmatter-url-js-c8ca173fb1e754498978.js","mappings":"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","sources":["webpack://portfolio-v2/./node_modules/@babel/runtime/helpers/construct.js","webpack://portfolio-v2/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://portfolio-v2/./node_modules/gatsby-plugin-mdx/index.js","webpack://portfolio-v2/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://portfolio-v2/./src/components/Navbar.js","webpack://portfolio-v2/./src/components/SvgComponents/icon_arrow-return_svg.js","webpack://portfolio-v2/./src/components/SvgComponents/icon_arrow-up_svg.js","webpack://portfolio-v2/./src/pages/projects/{mdx.frontmatter__url}.js"],"sourcesContent":["var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React, { useState, useEffect, useLayoutEffect } from 'react'\nimport { Link } from 'gatsby'\nimport Cara from '../components/SvgComponents/cara_svg.js'\nimport { motion, useMotionValue, useAnimation } from \"framer-motion\"\n\n/**\n * Get window size\n */\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\n/**\n * Navbar component\n */\nconst Navbar = (activeMenu) => {\n\n  /**\n   * Variables and states\n   */\n  const smallBreakpoint = 576; //Breakpoint for collapsing navbar\n  const [deviceSize, setDeviceSize] = useState(\"small\");\n  const [width, height] = useWindowSize();\n  //Open navbar state\n  const [opened, setOpened] = useState(false);\n\n  /**\n   * Set navbar size based on width\n   */\n  useEffect(() => {\n    // console.log(\"-------------\");\n    // console.log(\"handle resize\");\n    // console.log(\"width: \", width);\n    if (width > smallBreakpoint) {\n      if (deviceSize !== \"big\") {\n        setDeviceSize(\"big\");\n        setOpened(true);\n        animateNavbarItems.start(\"open\");\n      }\n    } else {\n      setDeviceSize(\"small\");\n      setOpened(false);\n      animateNavbarItems.start(\"closed\");\n    }\n  }, [width]);\n\n  //Original\n  // useEffect((deviceSize, width) => {\n  //   console.log(\"handle resize\");\n  //   const handleResize = () => setWidth(getWidth());\n  //   if (width > smallBreakpoint) {\n  //     if (deviceSize !== \"big\") {\n  //       setDeviceSize(\"big\");\n  //       setOpened(true);\n  //       animateNavbarItems.start(\"open\");\n  //     }\n  //   } else {\n  //     setDeviceSize(\"small\");\n  //     setOpened(false);\n  //     animateNavbarItems.start(\"closed\");\n  //   }\n  //   return () => window.removeEventListener(\"resize\", handleResize);\n  // }, []);\n\n  // const getWidth = () => {\n  //   if (typeof window !== `undefined`) {\n  //     return {\n  //       width: window.innerWidth,\n  //     }\n  //   };\n  // };\n\n  // const [width, setWidth] = useState(getWidth());\n\n  /**\n   * Animation variables & functions\n   */\n  const navbarItemsVariants = {\n    open: { opacity: 1, y: 0 },\n    closed: { opacity: 0, y: -16 },\n  }\n  const y = useMotionValue(0);\n  const animateNavbarItems = useAnimation();\n\n  /**\n  * Triggerable navbar\n  **/\n  const clickNavbarToggler = (e) => {\n    if (deviceSize === \"small\") {\n      animateNavbarItems.start(opened ? \"closed\" : \"open\");\n      setOpened(!opened);\n      y.get() !== 8 ? y.set(8) : y.set(0);\n    }\n  };\n\n  /**\n   * Detecting collapsable navbar on breakpoints\n   */\n\n\n  // function handleResize(deviceSize) {\n  //   console.log(\"handle resize\");\n  //   setWidth(window.innerWidth);\n  //   if (width > smallBreakpoint) {\n  //     if (deviceSize !== \"big\") {\n  //       setDeviceSize(\"big\");\n  //       setOpened(true);\n  //       animateNavbarItems.start(\"open\");\n  //     }\n  //   } else {\n  //     setDeviceSize(\"small\");\n  //     setOpened(false);\n  //     animateNavbarItems.start(\"closed\");\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   // window.addEventListener(\"resize\", handleResize, false);\n  //   window.addEventListener(\"resize\", handleResize, false);\n\n  //   handleResize();\n  //   return () => {\n  //     // window.removeEventListener('resize', handleResize)\n  //     window.removeEventListener('resize', handleResize)\n  //   }\n  // }, [width]);\n\n  // useEffect(() => {\n  //   // write your code here, it's like componentWillMount\n  //   handleResize();\n  // }, [])\n\n\n  // useEffect(() => {\n  //   console.log(activeMenu);\n  // }, { activeMenu });\n\n  /**\n   * Navbar return\n   */\n  return (\n    <motion.nav className={`navbar ${deviceSize === \"small\" ? \"small-navbar\" : \"big-navbar\"}`} >\n      <div className=\"navbar-logo\">\n        <Link className=\"logo-link\" to=\"/\">\n          <Cara className=\"logo\" />\n        </Link>\n      </div>\n      {/* Toggler */}\n      <motion.button className=\"toggler\" type=\"button\" whileTap={{ scale: 0.8 }} onClick={clickNavbarToggler}>\n        <motion.div\n          className={`icon burger-menu`}\n          layout\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n        >\n          <motion.span\n            animate={{ rotate: opened ? -45 : 0, y: opened ? 12 : 0 }}\n          ></motion.span>\n          <motion.span\n            style={{ originX: 0.5, originY: 0.5 }}\n            animate={{ opacity: opened ? 0 : 1, scaleX: opened ? 0 : 1 }}\n            transition={{ duration: .1 }}\n          ></motion.span>\n          <motion.span\n            animate={{ rotate: opened ? 45 : 0, y: opened ? -12 : 0 }}\n          ></motion.span>\n        </motion.div>\n      </motion.button>\n      {/* Navbar elements and menu */}\n      <motion.ul\n        className={`navbar-items ${opened ? \"open-items\" : \"closed-items\"}`}\n        animate={animateNavbarItems}\n        variants={navbarItemsVariants}\n      >\n        <svg id=\"menu_triangle\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"8\" viewBox=\"0 0 16 8\">\n          <g id=\"menu_triangle_group\" data-name=\"menu_triangle_group\">\n            <polyline points=\"0 8 8 0 16 8\" fill=\"#fff\" stroke=\"#000\" stroke-miterlimit=\"10\" />\n          </g>\n        </svg>\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\" activeClassName=\"active\" partiallyActive={true} onClick={clickNavbarToggler}><span className=\"text\">Proyectos</span></Link>\n          <span className=\"divider\">/</span>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/#acerca-de\" className=\"nav-link\" activeClassName=\"active\" partiallyActive={true} onClick={clickNavbarToggler}><span className=\"text\">Acerca de</span></Link>\n          <span className=\"divider\">/</span>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/#contacto\" className=\"nav-link\" activeClassName=\"active\" partiallyActive={true} onClick={clickNavbarToggler}><span className=\"text\">Contacto</span></Link>\n        </li>\n      </motion.ul>\n    </motion.nav>\n  )\n}\n\nexport default Navbar","import * as React from \"react\"\n\nfunction SvgComponent(props) {\n  return (\n    <svg\n      width={24}\n      height={16}\n      viewBox=\"0 0 24 16\"\n      fill=\"inherit\"\n      stroke=\"inherit\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M7 5h15a1 1 0 011 1v8.5a1 1 0 01-1 1h-4.333\"\n        stroke=\"inherit\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M.688 4.61a.5.5 0 000 .78l5 4A.5.5 0 006.5 9V1a.5.5 0 00-.812-.39l-5 4z\"\n        stroke=\"inherit\"\n        fill=\"none\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default SvgComponent\n","import * as React from \"react\"\n\nfunction SvgComponent(props) {\n  return (\n    <svg\n      width={10}\n      height={18}\n      viewBox=\"0 0 10 18\"\n      fill=\"none\"\n      stroke=\"inherit\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path d=\"M5 7v10\" stroke=\"inherit\" fill=\"none\" strokeLinecap=\"round\" />\n      <path d=\"M5 1L1 7h8L5 1z\" stroke=\"inherit\" fill=\"none\" strokeLinejoin=\"round\" />\n    </svg>\n  )\n}\n\nexport default SvgComponent\n","import React, { useState, useEffect, useRef } from 'react'\nimport Layout from \"../../components/Layout\"\nimport { graphql } from 'gatsby'\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport Navbar from \"../../components/Navbar\"\nimport Button from \"../../components/Button\"\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport ArrowReturn from \"../../components/SvgComponents/icon_arrow-return_svg.js\"\nimport ArrowUp from \"../../components/SvgComponents/icon_arrow-up_svg.js\"\nimport { motion } from \"framer-motion\"\n// import { Swiper, SwiperSlide } from \"swiper/react\"\n// import SwiperCore, { Navigation, Thumbs } from \"swiper/core\"\n\n// // Import Swiper styles\n// import \"swiper/swiper.min.css\";\n// import \"swiper/components/navigation/navigation.min.css\"\n// import \"swiper/components/thumbs/thumbs.min.css\"\n\n// SwiperCore.use([Navigation, Thumbs]);\n\nconst ProjectPage = ({ data }) => {\n\n  //Swiper\n  // const [thumbsSwiper, setThumbsSwiper] = useState(null);\n\n  //Scrolls\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const handleScroll = () => {\n    const position = window.pageYOffset;\n    setScrollPosition(position);\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, { passive: true });\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <div className=\"projects\">\n      <Layout>\n        <Navbar />\n        <div className=\"content container-md\">\n          <article className=\"project\">\n            {/* Header */}\n            <motion.div layout className={`project-heading-section ${scrollPosition >= 8 ? \"away-from-top\" : \"\"}`}\n            >\n              <motion.div layout className=\"button-container\">\n                <Button type=\"secondary\" href=\"/\" layout classes=\"text-with-icon return-btn\">\n                  <p>Return</p>\n                  <ArrowReturn />\n                </Button>\n                <Button type=\"secondary\" href=\"#\" layout classes=\"icon up-btn\">\n                  <ArrowUp />\n                </Button>\n              </motion.div>\n              <div className=\"heading-title\">\n                <h2 className=\"projectHeading\">{data.mdx.frontmatter.title}</h2>\n                <svg id=\"heading-bg\" width=\"544\" height=\"120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <filter id=\"blurMe\">\n                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"50\" />\n                  </filter>\n                  <g opacity=\"0.8\" filter=\"url(#blurMe)\">\n                    <ellipse cx=\"12\" cy=\"-26.5\" rx=\"140\" ry=\"140\" fill=\"#F572EF\" />\n                    <ellipse cx=\"480  \" cy=\"140\" rx=\"140\" ry=\"140\" fill=\"#FBF59B\" />\n                  </g>\n                </svg>\n              </div>\n            </motion.div>\n\n            {/* <!-- Button trigger modal -->\n            <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n              Launch demo modal\n            </button> */}\n\n            {/* <!-- Modal --> */}\n            {/* <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                  </div>\n                  <div class=\"modal-body\"> */}\n            {/* Swiper instance */}\n            {/* <div className=\"swiper-gallery\">\n              <Swiper style={{\n                \"--swiper-navigation-color\": \"#000\",\n                \"--swiper-pagination-color\": \"#000\"\n              }}\n                spaceBetween={10}\n                navigation\n                init={true}\n                pagination={{ clickable: true }}\n                thumbs={{ swiper: thumbsSwiper }}\n                onSwiper={(swiper) => { console.log(swiper) }}\n                className=\"mySwiper2\">\n                {data.allFile.nodes.map(node =>\n                  <SwiperSlide>\n                    <GatsbyImage\n                      image={node.childImageSharp.gatsbyImageData}\n                      alt={node.name}\n                      key={node.id}\n                    />\n                  </SwiperSlide>\n                )}\n\n              </Swiper>\n              <Swiper\n                onSwiper={setThumbsSwiper}\n                spaceBetween={10}\n                slidesPerView={4}\n                freeMode={true}\n                watchSlidesVisibility={true}\n                watchSlidesProgress={true}\n                className=\"mySwiper\"\n              >\n                {data.allFile.nodes.map(node =>\n                  <SwiperSlide\n                  >\n                    <GatsbyImage\n                      image={node.childImageSharp.gatsbyImageData}\n                      alt={node.name}\n                      key={node.id}\n                    />\n                  </SwiperSlide>\n                )}\n\n              </Swiper> */}\n\n            {/* </div> */}\n            {/* </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n                  </div>\n                </div>\n              </div> */}\n            {/* </div> */}\n            {/* Content */}\n            <div className=\"main-text\">\n            <MDXRenderer>{data.mdx.body}</MDXRenderer>\n            </div>\n          </article>\n        </div>\n      </Layout>\n    </div >\n  )\n}\n\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        url\n      }\n      body\n    }\n    allFile(filter: {extension: {in: [\"png\", \"webp\"]}} sort: {fields: name}) {\n      nodes {\n        publicURL\n        name\n        id\n        extension\n        relativeDirectory\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectPage"],"names":["setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","module","exports","Reflect","construct","__esModule","a","push","apply","instance","Function","bind","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","Object","values","key","fn","activeMenu","size","setSize","useState","deviceSize","setDeviceSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","width","opened","setOpened","useEffect","animateNavbarItems","start","y","useMotionValue","useAnimation","clickNavbarToggler","get","set","motion","className","to","type","whileTap","scale","onClick","layout","initial","opacity","animate","rotate","style","originX","originY","scaleX","transition","duration","variants","open","closed","id","xmlns","height","viewBox","points","fill","stroke","activeClassName","partiallyActive","d","strokeLinecap","strokeLinejoin","data","scrollPosition","setScrollPosition","handleScroll","position","pageYOffset","passive","Layout","Button","href","classes","frontmatter","title","in","stdDeviation","filter","cx","cy","rx","ry","body"],"sourceRoot":""}